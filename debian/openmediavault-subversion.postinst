#!/bin/sh
#
# This file is part of OpenMediaVault-subversion.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Marcel Beck <marcel.beck@mbeck.org>
# @copyright Copyright (c) 2012 Marcel Beck
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions


case "$1" in
	configure)

		########################################################################
		# Update file permissions.
		########################################################################
		echo "Updating permissions"
		omv_install_fixperms

		########################################################################
		# Install locale files.
		########################################################################
		echo "Install locale files ..."
		omv_install_locale

		# Enable required apache modules
		a2enmod authnz_external dav_svn

		# Check for XML config
		if ! omv_config_exists "//services/subversion"; then
			omv_config_add_element "//services" "subversion" ""
			omv_config_add_element "//services/subversion" "enable" "0"
			omv_config_add_element "//services/subversion" "require-auth" "1"
			omv_config_add_element "//services/subversion" "realm" "Subversion Repositories on OMV"
			omv_config_add_element "//services/subversion" "repository-root" ""
			omv_config_add_element "//services/subversion" "repos" ""
		fi
		
		index=$(omv_config_get_count "//services/subversion/repos/repo")
		while [ ${index} -gt 0 ]
		do
			reporef=$(omv_config_get "//services/subversion/repos/repo[position()=${index}]/uuid")
			
			privileges_index=$(omv_config_get_count "//services/subversion/repos/repo[uuid='${reporef}']/privileges/privilege")
			while [ ${privileges_index} -gt 0 ]
			do
				USERUUID="$(omv_config_get "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/userref")"
				if [ "${USERUUID}" != "" ]; then
					if omv_isuuid "${USERUUID}"; then
						USERNAME=$(omv_config_get "//system/usermanagement/users/user[uuid='${USERUUID}']/name")
						if ! omv_config_exists "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/username"; then
							echo "Transform User UUID: ${USERUUID} to Username: ${USERNAME}"
							omv_config_add_element "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]" "username" "${USERNAME}"
							omv_config_delete "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/userref"
						fi
					fi
				fi
				
				GROUPUUID="$(omv_config_get "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/groupref")"
				if [ "${GROUPUUID}" != "" ]; then
					if omv_isuuid "${GROUPUUID}"; then						
						GROUPNAME=$(omv_config_get "//system/usermanagement/groups/group[uuid='${GROUPUUID}']/name")
						if ! omv_config_exists "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/groupname"; then
							echo "Transform Group UUID: ${GROUPUUID} to Groupname: ${GROUPNAME}"
							omv_config_add_element "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]" "groupname" "${GROUPNAME}"
							omv_config_delete "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/groupref"
						fi
					fi
				fi
				
				privileges_index=$(( ${privileges_index} - 1 ))
			done
			
			index=$(( ${index} - 1 ))
		done
	
		# Clean up old installation?
		if [ -f /etc/apache2/conf.d/omv-svn ]; then

			/bin/rm -f /etc/apache2/conf.d/omv-svn
			omv-mkconf subversion
		fi
	
		monit restart apache2

	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
